/*
 * RSAPaddingSelectorDialog.java
 *
 * Created on 24. September 2008, 19:54
 */

package jcrypter.rsa;

import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author  uli
 */
public class RSAPaddingSelectorDialog extends javax.swing.JDialog {
    
    private String padding;
    private Map<String, String> assoc = new HashMap<String, String>();

    /** Creates new form RSAPaddingSelectorDialog */
    public RSAPaddingSelectorDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //Add standard associations
        assoc.put("None", "None");
        assoc.put("PKCS #1 V1.5", "PKCS1Padding");
        assoc.put("OAEP (SHA1, MFG1)", "OAEPWithSHA1AndMGF1Padding");
        //Set the default
        padding = "OAEPWithSHA1AndMGF1Padding";
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paddingLabel = new javax.swing.JLabel();
        paddingComboBox = new javax.swing.JComboBox();
        okButton = new javax.swing.JButton();
        cipherLabel = new javax.swing.JLabel();
        cipherComboBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select padding");

        paddingLabel.setText("Padding:");

        paddingComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "PKCS #1 V1.5", "OAEP (SHA1, MFG1)" }));
        paddingComboBox.setSelectedIndex(2);

        okButton.setText("OK");
        okButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okButtonMouseClicked(evt);
            }
        });

        cipherLabel.setText("Cipher:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cipherLabel)
                    .addComponent(paddingLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paddingComboBox, 0, 164, Short.MAX_VALUE)
                    .addComponent(cipherComboBox, 0, 164, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(okButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(paddingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paddingLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cipherLabel)
                            .addComponent(cipherComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void okButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okButtonMouseClicked
    //Set the padding string depending on the combo box selection
    padding = assoc.get((String) paddingComboBox.getSelectedItem());
    this.setVisible(false);
}//GEN-LAST:event_okButtonMouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                RSAPaddingSelectorDialog dialog = new RSAPaddingSelectorDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    public void addPadding(String showName, String realName)
    {
        assoc.put(showName, realName);
        paddingComboBox.addItem(showName);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cipherComboBox;
    private javax.swing.JLabel cipherLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox paddingComboBox;
    private javax.swing.JLabel paddingLabel;
    // End of variables declaration//GEN-END:variables

    public String getPadding()
    {
        return padding;
    }
    
    public String getCipher

}
