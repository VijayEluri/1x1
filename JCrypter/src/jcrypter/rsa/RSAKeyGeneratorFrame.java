package jcrypter.rsa;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import jcrypter.JCrypterFrame;

/*
 * RSAKeyGeneratorFrame.java
 *
 * Created on 20. September 2008, 15:59
 */



/**
 *
 * @author  uli
 */
public class RSAKeyGeneratorFrame extends javax.swing.JFrame {

    /** Creates new form RSAKeyGeneratorFrame */
    public RSAKeyGeneratorFrame() {
        initComponents();
        //Add the items in the keysizes array to the keysize combo box
        for(int i : keysizes)
        {
            keysizeComboBox.addItem(i);
        }
    }
    
    public static final int[] keysizes = {512, 1024, 2048, 4096, 8192, 16384, 32768};

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        keysizeLabel = new javax.swing.JLabel();
        keysizeComboBox = new javax.swing.JComboBox();
        pubFileLabel = new javax.swing.JLabel();
        pubFileField = new javax.swing.JTextField();
        privFileLabel = new javax.swing.JLabel();
        privFileField = new javax.swing.JTextField();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(i18n.getString("Generate_RSA_Key")); // NOI18N

        keysizeLabel.setText(i18n.getString("Key_size:")); // NOI18N

        pubFileLabel.setText(i18n.getString("Pub_file:")); // NOI18N

        pubFileField.setText(i18n.getString("pub.rsp")); // NOI18N

        privFileLabel.setText(i18n.getString("Priv_file:")); // NOI18N

        privFileField.setText(i18n.getString("sec.rss")); // NOI18N

        okButton.setText(i18n.getString("OK")); // NOI18N
        okButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(okButton, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(keysizeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(keysizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pubFileLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pubFileField, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(privFileLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(privFileField, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keysizeLabel)
                    .addComponent(keysizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pubFileLabel)
                    .addComponent(pubFileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(privFileLabel)
                    .addComponent(privFileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(okButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void okButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okButtonMouseClicked
        try
        {
            KeyPairGenerator kpgen = KeyPairGenerator.getInstance(i18n.getString("RSA"), i18n.getString("BC"));//GEN-LAST:event_okButtonMouseClicked
            kpgen.initialize((Integer)keysizeComboBox.getSelectedItem(), JCrypterFrame.rand);
            
            //Generate the key pair
            KeyPair kp = kpgen.generateKeyPair();
            //Write the public key
            FileOutputStream fout = new FileOutputStream(pubFileField.getText());
            fout.write(kp.getPublic().getEncoded());
            fout.close();
            //Write the secret key
            fout = new FileOutputStream(privFileField.getText());
            fout.write(kp.getPrivate().getEncoded());
            fout.close();
        }
        catch (FileNotFoundException ex)
        {
            Logger.getLogger(RSAKeyGeneratorFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (IOException ex)
        {
            Logger.getLogger(RSAKeyGeneratorFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (NoSuchAlgorithmException ex)
        {
            Logger.getLogger(RSAKeyGeneratorFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (NoSuchProviderException ex)
        {
            Logger.getLogger(RSAKeyGeneratorFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
}

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RSAKeyGeneratorFrame().setVisible(true);
            }
        });
    }
    
    ResourceBundle i18n = ResourceBundle.getBundle("jcrypter/rsa/Bundle");
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox keysizeComboBox;
    private javax.swing.JLabel keysizeLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField privFileField;
    private javax.swing.JLabel privFileLabel;
    private javax.swing.JTextField pubFileField;
    private javax.swing.JLabel pubFileLabel;
    // End of variables declaration//GEN-END:variables

}
