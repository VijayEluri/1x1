/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MessageDigestPanel.java
 *
 * Created on 02.02.2009, 14:06:10
 */
package jopensslgui;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author uli
 */
public class MessageDigestPanel extends javax.swing.JPanel
{

    /** Creates new form MessageDigestPanel */
    public MessageDigestPanel()
    {
        initComponents();
        //Init the algorithm combo box
        initHashAlgorithms();
    }

    private void initHashAlgorithms()
    {
        try
        {
            Process p = Runtime.getRuntime().exec("openssl list-message-digest-commands");
            p.waitFor();
            BufferedReader r = new BufferedReader(new InputStreamReader(p.getInputStream()));
            while (r.ready())
            {
                algorithmComboBox.addItem(r.readLine().toUpperCase());
            }
            algorithmComboBox.setSelectedIndex(3);
            r.close();
        }

        catch (IOException ex)
        {
            Logger.getLogger(MessageDigestPanel.class.getName()).log(Level.SEVERE, null, ex);
        }        catch (InterruptedException ex)
        {
            Logger.getLogger(GenerateECKeysPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        algorithmLabel = new javax.swing.JLabel();
        algorithmComboBox = new javax.swing.JComboBox();
        inputFileLabel = new javax.swing.JLabel();
        inputFileField = new javax.swing.JTextField();
        selectInputFileButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        hashLabel = new javax.swing.JLabel();
        hashField = new javax.swing.JTextField();

        algorithmLabel.setText( i18n.getString("MessageDigestPanel.algorithmLabel.text")); // NOI18N

        inputFileLabel.setText( i18n.getString("MessageDigestPanel.inputFileLabel.text")); // NOI18N

        inputFileField.setText( i18n.getString("MessageDigestPanel.inputFileField.text")); // NOI18N

        selectInputFileButton.setText(i18n.getString("MessageDigestPanel.selectInputFileButton.text")); // NOI18N
        selectInputFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectInputFileButtonActionPerformed(evt);
            }
        });

        okButton.setMnemonic('o');
        okButton.setText(i18n.getString("MessageDigestPanel.okButton.text")); // NOI18N
        okButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okButtonMouseClicked(evt);
            }
        });
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        hashLabel.setText( i18n.getString("MessageDigestPanel.hashLabel.text")); // NOI18N

        hashField.setEditable(false);
        hashField.setText( i18n.getString("MessageDigestPanel.hashField.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(algorithmLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(algorithmComboBox, 0, 220, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(inputFileLabel)
                        .addGap(18, 18, 18)
                        .addComponent(inputFileField, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectInputFileButton))
                    .addComponent(okButton, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(hashLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hashField, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(algorithmLabel)
                    .addComponent(algorithmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputFileLabel)
                    .addComponent(inputFileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectInputFileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(okButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hashField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hashLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void selectInputFileButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_selectInputFileButtonActionPerformed
    {//GEN-HEADEREND:event_selectInputFileButtonActionPerformed
        fileChooser.setSelectedFile(new File(inputFileField.getText()));
        fileChooser.showSaveDialog(this);
        inputFileField.setText(fileChooser.getSelectedFile().getAbsolutePath());
}//GEN-LAST:event_selectInputFileButtonActionPerformed

    private void okButtonMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_okButtonMouseClicked
    {//GEN-HEADEREND:event_okButtonMouseClicked
}//GEN-LAST:event_okButtonMouseClicked

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okButtonActionPerformed
    {//GEN-HEADEREND:event_okButtonActionPerformed
        try
        {
            String inputFile = inputFileField.getText();
            Process p =
                    Runtime.getRuntime().
                    exec("openssl dgst -" + algorithmComboBox.getSelectedItem().toString().toLowerCase() +
                    " " + inputFile);
            BufferedReader r = new BufferedReader(new InputStreamReader(p.getInputStream()));
            String hashLine = r.readLine();
            String hash = hashLine.split("=")[1].trim();
            hashField.setText(hash);
        }
        catch (IOException ex)
        {
            Logger.getLogger(MessageDigestPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_okButtonActionPerformed
    private JFileChooser fileChooser = new JFileChooser();
    private ResourceBundle i18n = ResourceBundle.getBundle("jopensslgui/Bundle"); //NOI18N
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox algorithmComboBox;
    private javax.swing.JLabel algorithmLabel;
    private javax.swing.JTextField hashField;
    private javax.swing.JLabel hashLabel;
    private javax.swing.JTextField inputFileField;
    private javax.swing.JLabel inputFileLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JButton selectInputFileButton;
    // End of variables declaration//GEN-END:variables
}
