/*
 * JTimeBombClientFrame.java
 *
 * Created on 30. Juli 2008, 13:53
 */

package jtimebomb;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author  uli
 */
public class JTimeBombClientFrame extends javax.swing.JFrame {
    
    /** Creates new form JTimeBombClientFrame */
    public JTimeBombClientFrame() {
        initComponents();
        ipField.grabFocus();
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ipLabel = new javax.swing.JLabel();
        ipField = new javax.swing.JTextField();
        connectButton = new javax.swing.JButton();
        hourLabel = new javax.swing.JLabel();
        hourSpinner = new javax.swing.JSpinner();
        minuteSpinner = new javax.swing.JSpinner();
        minutesLabel = new javax.swing.JLabel();
        secondsLabel = new javax.swing.JLabel();
        secondSpinner = new javax.swing.JSpinner();
        setButton = new javax.swing.JToggleButton();
        decreaseButton = new javax.swing.JToggleButton();
        increaseButton = new javax.swing.JToggleButton();
        activateButton = new javax.swing.JButton();
        defuseButton = new javax.swing.JButton();
        disconnectButton = new javax.swing.JButton();

        setTitle("JTimeBomb Client");

        ipLabel.setText("IP-Adress:");

        ipField.setText("127.0.0.1");

        connectButton.setMnemonic('c');
        connectButton.setText("Connect");
        connectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                connectButtonMouseClicked(evt);
            }
        });

        hourLabel.setDisplayedMnemonic('u');
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("jtimebomb/i18n"); // NOI18N
        hourLabel.setText(bundle.getString("Hours:")); // NOI18N

        hourSpinner.setModel(new SpinnerNumberModel(0, 0, 99, 1));
        hourSpinner.setToolTipText(bundle.getString("Hours_in_the_delay_timer")); // NOI18N

        minuteSpinner.setModel(new SpinnerNumberModel(0, -1, 60, 1));
        minuteSpinner.setToolTipText(bundle.getString("Minutes_in_the_delay_timer")); // NOI18N

        minutesLabel.setDisplayedMnemonic('m');
        minutesLabel.setText(bundle.getString("Minutes:")); // NOI18N

        secondsLabel.setDisplayedMnemonic('s');
        secondsLabel.setText(bundle.getString("Seconds:")); // NOI18N

        secondSpinner.setModel(new SpinnerNumberModel(0, -1, 60, 1));
        secondSpinner.setToolTipText(bundle.getString("Seconds_in_the_delay_timer")); // NOI18N

        setButton.setMnemonic('s');
        setButton.setText("Set");
        setButton.setMaximumSize(new java.awt.Dimension(80, 22));
        setButton.setMinimumSize(new java.awt.Dimension(80, 22));
        setButton.setPreferredSize(new java.awt.Dimension(80, 22));
        setButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setButtonActionPerformed(evt);
            }
        });

        decreaseButton.setMnemonic('e');
        decreaseButton.setText("Decrease");
        decreaseButton.setMaximumSize(new java.awt.Dimension(80, 22));
        decreaseButton.setMinimumSize(new java.awt.Dimension(80, 22));
        decreaseButton.setPreferredSize(new java.awt.Dimension(80, 22));
        decreaseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                decreaseButtonMouseClicked(evt);
            }
        });

        increaseButton.setMnemonic('i');
        increaseButton.setText("Increase");
        increaseButton.setMaximumSize(new java.awt.Dimension(80, 22));
        increaseButton.setMinimumSize(new java.awt.Dimension(80, 22));
        increaseButton.setPreferredSize(new java.awt.Dimension(80, 22));
        increaseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                increaseButtonMouseClicked(evt);
            }
        });

        activateButton.setMnemonic('a');
        activateButton.setText("Activate");
        activateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activateButtonActionPerformed(evt);
            }
        });

        defuseButton.setMnemonic('f');
        defuseButton.setText("Defuse");
        defuseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defuseButtonActionPerformed(evt);
            }
        });

        disconnectButton.setMnemonic('d');
        disconnectButton.setText("Disconnect");
        disconnectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                disconnectButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(activateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(defuseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ipLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ipField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(connectButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(disconnectButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(decreaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addGap(6, 6, 6)
                                .addComponent(secondsLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(increaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addGap(9, 9, 9)
                                .addComponent(minutesLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(setButton, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(hourLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(minuteSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hourSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(secondSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ipLabel)
                    .addComponent(connectButton)
                    .addComponent(disconnectButton)
                    .addComponent(ipField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(minutesLabel)
                            .addComponent(minuteSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(increaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(secondsLabel)
                            .addComponent(secondSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(decreaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(hourSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(hourLabel)
                        .addComponent(setButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(activateButton)
                    .addComponent(defuseButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_connectButtonMouseClicked
        try {
            String ipAdress = ipField.getText();
            socket = new Socket(ipAdress, 12121);
            in = socket.getInputStream();
            out = socket.getOutputStream();
            socket.setSoTimeout(2000);//GEN-LAST:event_connectButtonMouseClicked
        } catch (UnknownHostException ex) {
            Logger.getLogger(JTimeBombClientFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(JTimeBombClientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void disconnectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_disconnectButtonMouseClicked
        try {
            out.close();
            in.close();
            socket.close();//GEN-LAST:event_disconnectButtonMouseClicked
            }
        catch (IOException ex) {
                              Logger.getLogger(JTimeBombClientFrame.class.getName()).log(Level.SEVERE, null, ex);
                             }
    }

    private void increaseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_increaseButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_increaseButtonMouseClicked

    private void decreaseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_decreaseButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_decreaseButtonMouseClicked

    private void setButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setButtonActionPerformed
        try {
            
                SpinnerNumberModel model = (SpinnerNumberModel) hourSpinner.getModel();
                int hoursLeft = model.getNumber().intValue();
                model = (SpinnerNumberModel) minuteSpinner.getModel();
                int minutesLeft = model.getNumber().intValue();
                model = (SpinnerNumberModel) secondSpinner.getModel();
                int secondsLeft = model.getNumber().intValue(); //+1: Start countdown at exactly the selected time and not at one second after
                int totalSecondsLeft = secondsLeft + minutesLeft * 60 + hoursLeft * 3600 + 1;
                //Set total seconds
                String command = "s" + Integer.toString(totalSecondsLeft);
                out.write(command.getBytes());
            }
            catch (IOException ex) {
                                    Logger.getLogger(JTimeBombClientFrame.class.getName()).log(Level.SEVERE, null, ex);
                                }
    }//GEN-LAST:event_setButtonActionPerformed

    private void activateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activateButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_activateButtonActionPerformed

    private void defuseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defuseButtonActionPerformed
        try {
                //Check Connection
                if (!socket.isConnected()) {
                    return;
                }//GEN-LAST:event_defuseButtonActionPerformed
                //Remote-activate bomb
                out.write('a');
            }
            catch (IOException ex) {
                        Logger.getLogger(JTimeBombClientFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JTimeBombClientFrame().setVisible(true);
            }
        });
    }
    
    private Socket socket;
    private InputStream in;
    private OutputStream out;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton activateButton;
    private javax.swing.JButton connectButton;
    private javax.swing.JToggleButton decreaseButton;
    private javax.swing.JButton defuseButton;
    private javax.swing.JButton disconnectButton;
    private javax.swing.JLabel hourLabel;
    private javax.swing.JSpinner hourSpinner;
    private javax.swing.JToggleButton increaseButton;
    private javax.swing.JTextField ipField;
    private javax.swing.JLabel ipLabel;
    private javax.swing.JSpinner minuteSpinner;
    private javax.swing.JLabel minutesLabel;
    private javax.swing.JSpinner secondSpinner;
    private javax.swing.JLabel secondsLabel;
    private javax.swing.JToggleButton setButton;
    // End of variables declaration//GEN-END:variables
    
}
